####################
# routing
####################
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: routing
  name: routing
  namespace: skeleton
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: routing
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: routing
    spec:
      containers:
      - image: ai-docker-registry-vpc.cn-shenzhen.cr.aliyuncs.com/skeleton/routing-service:v1
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTIONS
          value: "-Xmx200m -Xms200m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
        name: routing
        resources:
          limits:
            cpu: 200m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 300Mi
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ai-sec2
      restartPolicy: Always
      securityContext: {}
      serviceAccountName: ""
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: routing
  name: routing
  namespace: skeleton
spec:
  ports:
  - name: port
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: routing
  sessionAffinity: None
  type: NodePort
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: routing-ingress
  namespace: skeleton
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: routing.c8ec94c31356845f38eed18b2cd7983f1.cn-shenzhen.alicontainer.com
    http:
      paths:
      - path: /
        backend:
          serviceName: routing
          servicePort: 80
####################
# rec v1
####################
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: rec
    version: v1
  name: rec-v1
  namespace: skeleton
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: rec
      version: v1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rec
        version: v1
    spec:
      containers:
      - image: ai-docker-registry-vpc.cn-shenzhen.cr.aliyuncs.com/skeleton/rec-service:v1
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTIONS
          value: "-Xmx200m -Xms200m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
        name: rec
        resources:
          limits:
            cpu: 200m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 300Mi
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ai-sec2
      restartPolicy: Always
      securityContext: {}
      serviceAccountName: ""
####################
# rec v2
####################
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: rec
    version: v2
  name: rec-v2
  namespace: skeleton
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: rec
      version: v2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rec
        version: v2
    spec:
      containers:
      - image: ai-docker-registry-vpc.cn-shenzhen.cr.aliyuncs.com/skeleton/rec-service:v2
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTIONS
          value: "-Xmx200m -Xms200m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
        name: rec
        resources:
          limits:
            cpu: 200m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 300Mi
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ai-sec2
      restartPolicy: Always
      securityContext: {}
      serviceAccountName: ""
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rec
  name: rec
  namespace: skeleton
spec:
  ports:
  - name: rec-port
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: rec
  sessionAffinity: None
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    name: rec-ingress
    namespace: skeleton
spec:
  rules:
  - host: rec.c8ec94c31356845f38eed18b2cd7983f1.cn-shenzhen.alicontainer.com
    http:
      paths:
      - path: /
        backend:
          serviceName: rec
          servicePort: 80
